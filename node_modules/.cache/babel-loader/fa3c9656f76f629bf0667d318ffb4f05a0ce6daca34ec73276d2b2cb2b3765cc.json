{"ast":null,"code":"var _jsxFileName = \"/Users/dhruv.angra/Desktop/StockAppDashboard/stock-dashboard/src/components/Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Area, XAxis, YAxis, ResponsiveContainer, AreaChart, Tooltip } from \"recharts\";\nimport { mockHistoricalData } from '../constants/mock';\nimport { convertUnixTimestampToDate } from '../helpers/date-helper';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [data, setData] = useState(mockHistoricalData);\n  const [filter, setFilter] = useState(\"1W\");\n  const formatData = data => {\n    return data.c.map((item, index) => {\n      return {\n        value: item.toFixed(2),\n        date: convertUnixTimestampToDate(data.t[index])\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: formatData(data),\n        children: [/*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#312e81\"\n          // fill=\"url(#chartColor)\"\n          ,\n          fillOpacity: 1,\n          strokeWidth: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [\"dataMin\", \"dataMax\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"s8aGCJcQzVFsCIUbTa8Xte4vBy8=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useState","Area","XAxis","YAxis","ResponsiveContainer","AreaChart","Tooltip","mockHistoricalData","convertUnixTimestampToDate","Card","jsxDEV","_jsxDEV","Charts","_s","data","setData","filter","setFilter","formatData","c","map","item","index","value","toFixed","date","t","children","type","dataKey","stroke","fillOpacity","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","domain","_c","$RefreshReg$"],"sources":["/Users/dhruv.angra/Desktop/StockAppDashboard/stock-dashboard/src/components/Charts.js"],"sourcesContent":["import React, {useState} from 'react'\nimport {\n  Area,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  AreaChart,\n  Tooltip,\n} from \"recharts\";\nimport { mockHistoricalData } from '../constants/mock';\nimport { convertUnixTimestampToDate } from '../helpers/date-helper';\nimport Card from './Card';\n\nconst Charts = () => {\n    const [data, setData] = useState(mockHistoricalData);\n    const [filter, setFilter] = useState(\"1W\");\n\n    const formatData = (data) => {\n        return data.c.map((item, index) => {\n          return {\n            value: item.toFixed(2),\n            date: convertUnixTimestampToDate(data.t[index]),\n          };\n        });\n      };\n\n  return (\n    <Card>\n        <ResponsiveContainer>\n            <AreaChart data={formatData(data)}>\n            <Area\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#312e81\"\n            // fill=\"url(#chartColor)\"\n            fillOpacity={1}\n            strokeWidth={0.5}\n          />\n          <Tooltip/>\n          <XAxis dataKey={\"date\"} />\n          <YAxis domain={[\"dataMin\", \"dataMax\"]} />\n            </AreaChart>\n        </ResponsiveContainer>\n    </Card>\n  )\n}\n\nexport default Charts"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SACEC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,mBAAmB,EACnBC,SAAS,EACTC,OAAO,QACF,UAAU;AACjB,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,0BAA0B,QAAQ,wBAAwB;AACnE,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAACO,kBAAkB,CAAC;EACpD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMkB,UAAU,GAAIJ,IAAI,IAAK;IACzB,OAAOA,IAAI,CAACK,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACjC,OAAO;QACLC,KAAK,EAAEF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;QACtBC,IAAI,EAAEjB,0BAA0B,CAACM,IAAI,CAACY,CAAC,CAACJ,KAAK,CAAC;MAChD,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAEL,oBACEX,OAAA,CAACF,IAAI;IAAAkB,QAAA,eACDhB,OAAA,CAACP,mBAAmB;MAAAuB,QAAA,eAChBhB,OAAA,CAACN,SAAS;QAACS,IAAI,EAAEI,UAAU,CAACJ,IAAI,CAAE;QAAAa,QAAA,gBAClChB,OAAA,CAACV,IAAI;UACL2B,IAAI,EAAC,UAAU;UACfC,OAAO,EAAC,OAAO;UACfC,MAAM,EAAC;UACP;UAAA;UACAC,WAAW,EAAE,CAAE;UACfC,WAAW,EAAE;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFzB,OAAA,CAACL,OAAO;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACVzB,OAAA,CAACT,KAAK;UAAC2B,OAAO,EAAE;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1BzB,OAAA,CAACR,KAAK;UAACkC,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEX,CAAC;AAAAvB,EAAA,CAhCKD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAkCZ,eAAeA,MAAM;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
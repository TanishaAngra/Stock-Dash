{"ast":null,"code":"var _jsxFileName = \"/Users/dhruv.angra/Desktop/StockAppDashboard/stock-dashboard/src/components/Charts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Area, XAxis, YAxis, ResponsiveContainer, AreaChart, Tooltip } from \"recharts\";\nimport { mockHistoricalData } from \"../constants/mock\";\nimport { convertUnixTimestampToDate } from \"../helpers/date-helper\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  const [data, setData] = useState(mockHistoricalData);\n  const [filter, setFilter] = useState(\"1W\");\n  const formatData = data => {\n    return data.c.map((item, index) => {\n      return {\n        value: item.toFixed(2),\n        date: convertUnixTimestampToDate(data.t[index])\n      };\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: formatData(data),\n        children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n            id: \"chartColor\",\n            x1: \"0\",\n            y1: \"0\",\n            x2: \"0\",\n            y2: \"1\",\n            children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"5%\",\n              stopColor: \"rgb(199 210 254)\",\n              stopOpacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n              offset: \"95%\",\n              stopColor: \"rgb(199 210 254)\",\n              stopOpacity: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: \"value\",\n          stroke: \"#312e81\",\n          fill: \"url(#chartColor)\",\n          fillOpacity: 1,\n          strokeWidth: 0.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          domain: [\"dataMin\", \"dataMax\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"s8aGCJcQzVFsCIUbTa8Xte4vBy8=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useState","Area","XAxis","YAxis","ResponsiveContainer","AreaChart","Tooltip","mockHistoricalData","convertUnixTimestampToDate","Card","jsxDEV","_jsxDEV","Charts","_s","data","setData","filter","setFilter","formatData","c","map","item","index","value","toFixed","date","t","children","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","fileName","_jsxFileName","lineNumber","columnNumber","type","dataKey","stroke","fill","fillOpacity","strokeWidth","domain","_c","$RefreshReg$"],"sources":["/Users/dhruv.angra/Desktop/StockAppDashboard/stock-dashboard/src/components/Charts.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Area,\n  XAxis,\n  YAxis,\n  ResponsiveContainer,\n  AreaChart,\n  Tooltip,\n} from \"recharts\";\nimport { mockHistoricalData } from \"../constants/mock\";\nimport { convertUnixTimestampToDate } from \"../helpers/date-helper\";\nimport Card from \"./Card\";\n\nconst Charts = () => {\n  const [data, setData] = useState(mockHistoricalData);\n  const [filter, setFilter] = useState(\"1W\");\n\n  const formatData = (data) => {\n    return data.c.map((item, index) => {\n      return {\n        value: item.toFixed(2),\n        date: convertUnixTimestampToDate(data.t[index]),\n      };\n    });\n  };\n\n  return (\n    <Card>\n      <ResponsiveContainer>\n        <AreaChart data={formatData(data)}>\n          <defs>\n            <linearGradient id=\"chartColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"5%\" stopColor=\"rgb(199 210 254)\" stopOpacity={0.8} />\n              <stop offset=\"95%\" stopColor=\"rgb(199 210 254)\" stopOpacity={0} />\n            </linearGradient>\n          </defs>\n          <Area\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#312e81\"\n            fill=\"url(#chartColor)\"\n            fillOpacity={1}\n            strokeWidth={0.5}\n          />\n          <Tooltip />\n          <XAxis dataKey={\"date\"} />\n          <YAxis domain={[\"dataMin\", \"dataMax\"]} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </Card>\n  );\n};\n\nexport default Charts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/dhruv.angra/Desktop/StockAppDashboard/stock-dashboard/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { mockSearchResults } from \"../constants/mock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [bestMatches, setBestMatches] = useState(mockSearchResults.result);\n  const clear = () => {\n    setInput(\"\");\n    setBestMatches([]);\n  };\n  const updateBestMatches = () => {\n    setBestMatches(mockSearchResults.result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex item-center my-4 border-2 rounded-md relative z-50 w-96 bg-white border-neutral-200\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      className: \"w-full px-4 py-2 focus:outline-none rounded-md\",\n      placeholder: \"Search Stock Here...\",\n      onChange: event => {\n        setInput(event.target.value);\n      },\n      onKeyDown: event => {\n        if (event.key === \"Enter\") {\n          updateBestMatches();\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(Search, \"/gCpQ3kxsY24HP8/rQg7fuJDbec=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","mockSearchResults","jsxDEV","_jsxDEV","Search","_s","input","setInput","bestMatches","setBestMatches","result","clear","updateBestMatches","className","children","type","value","placeholder","onChange","event","target","onKeyDown","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dhruv.angra/Desktop/StockAppDashboard/stock-dashboard/src/components/Search.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {mockSearchResults} from \"../constants/mock\"\n\nconst Search = () => {\n    const [input,setInput] = useState(\"\");\n    const [bestMatches,setBestMatches] = useState(mockSearchResults.result);\n\n    const clear = () =>{\n        setInput(\"\");\n        setBestMatches([]);\n    };\n\n    const updateBestMatches = () => {\n        setBestMatches(mockSearchResults.result);\n    };\n\n  return <div className=\"flex item-center my-4 border-2 rounded-md relative z-50 w-96 bg-white border-neutral-200\">\n    <input \n    type=\"text\"\n    value={input}\n    className=\"w-full px-4 py-2 focus:outline-none rounded-md\"\n    placeholder=\"Search Stock Here...\"\n    onChange={(event) => {\n        setInput(event.target.value);\n    }}\n    onKeyDown ={(event) => {\n        if (event.key === \"Enter\"){\n            updateBestMatches();\n        }\n    }}\n    />\n  </div>\n}\n\nexport default Search"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAAQC,iBAAiB,QAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACQ,WAAW,EAACC,cAAc,CAAC,GAAGT,QAAQ,CAACC,iBAAiB,CAACS,MAAM,CAAC;EAEvE,MAAMC,KAAK,GAAGA,CAAA,KAAK;IACfJ,QAAQ,CAAC,EAAE,CAAC;IACZE,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5BH,cAAc,CAACR,iBAAiB,CAACS,MAAM,CAAC;EAC5C,CAAC;EAEH,oBAAOP,OAAA;IAAKU,SAAS,EAAC,0FAA0F;IAAAC,QAAA,eAC9GX,OAAA;MACAY,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,KAAM;MACbO,SAAS,EAAC,gDAAgD;MAC1DI,WAAW,EAAC,sBAAsB;MAClCC,QAAQ,EAAGC,KAAK,IAAK;QACjBZ,QAAQ,CAACY,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAC;MAChC,CAAE;MACFK,SAAS,EAAIF,KAAK,IAAK;QACnB,IAAIA,KAAK,CAACG,GAAG,KAAK,OAAO,EAAC;UACtBV,iBAAiB,CAAC,CAAC;QACvB;MACJ;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AACR,CAAC;AAAArB,EAAA,CA7BKD,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AA+BZ,eAAeA,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}